openapi: 3.0.3
info:
  title: Inventory Service API
  description: API for managing inventory, allocations, and warehouses
  version: 1.0.0
servers:
  - url: 'https://api.example.com/inventory/v1'
    description: Production server
  - url: 'https://staging-api.example.com/inventory/v1'
    description: Staging server
  - url: 'https://dev-api.example.com/inventory/v1'
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    InventoryItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        sku:
          type: string
        productId:
          type: string
          format: uuid
        name:
          type: string
        quantityAvailable:
          type: integer
          minimum: 0
        quantityReserved:
          type: integer
          minimum: 0
        quantityOnOrder:
          type: integer
          minimum: 0
        reorderThreshold:
          type: integer
          minimum: 0
        targetStockLevel:
          type: integer
          minimum: 0
        active:
          type: boolean
        warehouseId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        location:
          type: string
          nullable: true
        barcode:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
      required:
        - id
        - sku
        - productId
        - name
        - quantityAvailable
        - quantityReserved
        - warehouseId

    CreateInventoryItemRequest:
      type: object
      properties:
        sku:
          type: string
        productId:
          type: string
          format: uuid
        name:
          type: string
        warehouseId:
          type: string
          format: uuid
        initialQuantity:
          type: integer
          minimum: 0
        reorderThreshold:
          type: integer
          minimum: 0
        targetStockLevel:
          type: integer
          minimum: 0
        location:
          type: string
          nullable: true
        barcode:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
      required:
        - sku
        - productId
        - name
        - warehouseId
        - reorderThreshold
        - targetStockLevel

    InventoryAllocation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orderId:
          type: string
        orderItemId:
          type: string
        inventoryItemId:
          type: string
          format: uuid
        warehouseId:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 1
        status:
          type: string
          enum: [PENDING, CONFIRMED, CANCELLED, FULFILLED]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
          nullable: true
        notes:
          type: string
          nullable: true
      required:
        - id
        - orderId
        - orderItemId
        - inventoryItemId
        - warehouseId
        - quantity
        - status
        - createdAt

    CreateAllocationRequest:
      type: object
      properties:
        orderId:
          type: string
        orderItemId:
          type: string
        inventoryItemId:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 1
        warehouseId:
          type: string
          format: uuid
          nullable: true
        notes:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
      required:
        - orderId
        - orderItemId
        - inventoryItemId
        - quantity

    Warehouse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        code:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        addressLine1:
          type: string
        addressLine2:
          type: string
          nullable: true
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        latitude:
          type: number
          format: float
          nullable: true
        longitude:
          type: number
          format: float
          nullable: true
        active:
          type: boolean
        maxCapacity:
          type: integer
          nullable: true
        timeZone:
          type: string
          nullable: true
        isPrimary:
          type: boolean
        isVirtual:
          type: boolean
        contactEmail:
          type: string
          nullable: true
        contactPhone:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        operatingHours:
          type: object
          additionalProperties: true
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
      required:
        - id
        - code
        - name
        - addressLine1
        - city
        - state
        - postalCode
        - country
        - active

    StockTransaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        inventoryItemId:
          type: string
          format: uuid
        warehouseId:
          type: string
          format: uuid
        type:
          type: string
          enum: [RECEIPT, ADJUSTMENT, TRANSFER_IN, TRANSFER_OUT, SALE, RETURN, DAMAGE, RESERVATION, RELEASE, CYCLE_COUNT]
        quantity:
          type: integer
        referenceNumber:
          type: string
          nullable: true
        referenceType:
          type: string
          nullable: true
        relatedTransactionId:
          type: string
          format: uuid
          nullable: true
        reason:
          type: string
          nullable: true
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time
        sourceWarehouseId:
          type: string
          format: uuid
          nullable: true
        destinationWarehouseId:
          type: string
          format: uuid
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
      required:
        - id
        - inventoryItemId
        - warehouseId
        - type
        - quantity
        - createdBy
        - createdAt

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
              additionalProperties: true
          required:
            - code
            - message
      required:
        - success
        - error

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          additionalProperties: true
        meta:
          type: object
          properties:
            page:
              type: integer
            limit:
              type: integer
            totalItems:
              type: integer
            totalPages:
              type: integer
      required:
        - success

security:
  - bearerAuth: []

paths:
  /inventory-items:
    get:
      summary: List inventory items
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: sku
          in: query
          schema:
            type: string
        - name: productId
          in: query
          schema:
            type: string
        - name: warehouseId
          in: query
          schema:
            type: string
        - name: active
          in: query
          schema:
            type: boolean
        - name: lowStock
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/InventoryItem'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create inventory item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInventoryItemRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/InventoryItem'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /allocations:
    post:
      summary: Create allocation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAllocationRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/InventoryAllocation'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict - insufficient inventory
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /warehouses:
    get:
      summary: List warehouses
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: active
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Warehouse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'